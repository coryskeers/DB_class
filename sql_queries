SELECT customer_name, AVG(trip_distance), AVG(payment_amount), AVG(payment_tip / payment_amount) AS avg_tip_percent
	FROM 
		(SELECT customer_id FROM driver_customer_trips
			HAVING COUNT(customer_id) > (SELECT MAX(COUNT(customer_id)) * 0.75 FROM driver_customer_trips)) dct
		INNER JOIN customers c
		ON c.customer_id = dct.customer_id
		INNER JOIN driver_customer_payments dcp
		ON c.customer_id = dcp.customer_id
		INNER JOIN payments p
		ON dcp.payment_id = p.payment_id;

SELECT AVG(a.payment_tip) AS ratings_above_3, avg(b.payment_tip) AS ratings_below_3
	FROM (SELECT avg(payment_tip)
		FROM driver_rating dr
		HAVING dr.rate > 3.0
		GROUP BY dr.driver_id
	INNER JOIN driver_customer_payments dcp
		ON dr.driver_id = dcp.driver_id
	INNER JOIN payments p
		ON p.payment_id = dcp.payment_id) a,
		(SELECT avg(payment_tip)
		FROM driver_rating dr
		HAVING dr.rate > 3.0
		GROUP BY dr.driver_id
	INNER JOIN driver_customer_payments dcp
		ON dr.driver_id = dcp.driver_id
	INNER JOIN payments p
		ON p.payment_id = dcp.payment_id) b

SELECT driver_name, SUM(payment_amount) as total_payments
	FROM drivers d INNER JOIN driver_customer_payments dcp
	ON d.driver_id = dcp.driver_id INNER JOIN payments p
	ON dcp.payment_id = p.payment_id
	ORDER BY total_payments DESC
	LIMIT 1;
FROM drivers, payments, driver_customer_payments
ON driver_id
ORDER BY SUM(payment_amount) DESC
LIMIT 1;